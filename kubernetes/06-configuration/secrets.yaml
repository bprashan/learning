# Database credentials secret
apiVersion: v1
kind: Secret
metadata:
  name: database-secret
  labels:
    app: database
type: Opaque
data:
  # Values must be base64 encoded
  # username: admin (base64: YWRtaW4=)
  # password: supersecretpassword (base64: c3VwZXJzZWNyZXRwYXNzd29yZA==)
  username: YWRtaW4=
  password: c3VwZXJzZWNyZXRwYXNzd29yZA==
  database-url: bXlzcWw6Ly9hZG1pbjpzdXBlcnNlY3JldHBhc3N3b3JkQG15c3FsLXNlcnZpY2U6MzMwNi9hcHBkYg==
---
# API keys and tokens
apiVersion: v1
kind: Secret
metadata:
  name: api-secrets
  labels:
    app: web-app
type: Opaque
data:
  # jwt-secret: my-super-secret-jwt-key (base64: bXktc3VwZXItc2VjcmV0LWp3dC1rZXk=)
  # api-key: abcd1234567890 (base64: YWJjZDEyMzQ1Njc4OTA=)
  jwt-secret: bXktc3VwZXItc2VjcmV0LWp3dC1rZXk=
  api-key: YWJjZDEyMzQ1Njc4OTA=
  oauth-client-id: Y2xpZW50LWlkLTEyMzQ=
  oauth-client-secret: Y2xpZW50LXNlY3JldC01Njc4
---
# TLS certificate secret
apiVersion: v1
kind: Secret
metadata:
  name: tls-secret
  labels:
    app: web-app
type: kubernetes.io/tls
data:
  # Replace with actual base64 encoded certificate and key
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCi4uLgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t
  tls.key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCi4uLgotLS0tLUVORCBQUklWQVRFIEtFWS0tLS0t
---
# Docker registry credentials
apiVersion: v1
kind: Secret
metadata:
  name: docker-registry-secret
type: kubernetes.io/dockerconfigjson
data:
  # Docker config JSON (base64 encoded)
  # Format: {"auths":{"registry-url":{"username":"user","password":"pass","auth":"base64(user:pass)"}}}
  .dockerconfigjson: eyJhdXRocyI6eyJyZWdpc3RyeS11cmwiOnsidXNlcm5hbWUiOiJ1c2VyIiwicGFzc3dvcmQiOiJwYXNzIiwiYXV0aCI6ImRYTmxjanB3WVhOeiJ9fX0=
---
# Service account token (usually auto-generated)
apiVersion: v1
kind: Secret
metadata:
  name: custom-service-account-token
  annotations:
    kubernetes.io/service-account.name: custom-service-account
type: kubernetes.io/service-account-token
---
# Opaque secret with multiple data types
apiVersion: v1
kind: Secret
metadata:
  name: app-secrets
  labels:
    app: web-app
type: Opaque
stringData:  # Use stringData for plain text (auto-encoded to base64)
  database-password: "mySecretPassword123"
  redis-password: "redisPassword456"
  session-key: "random-session-key-789"
  api-token: "bearer-token-abc123def456"
data:
  # Mix stringData with data (base64 encoded)
  encryption-key: bXktZW5jcnlwdGlvbi1rZXktMTIz  # my-encryption-key-123
---
# Immutable secret (cannot be updated)
apiVersion: v1
kind: Secret
metadata:
  name: immutable-secret
  labels:
    app: security
immutable: true  # This secret cannot be updated once created
type: Opaque
stringData:
  critical-key: "this-cannot-be-changed"
  security-token: "immutable-security-token"
